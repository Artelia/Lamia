CREATE TABLE database(pk_database SERIAL PRIMARY KEY,businessline VARCHAR(255),resourcesdirectory VARCHAR(255),crs INT,baseversion VARCHAR(255),workversion VARCHAR(255),variant VARCHAR(255),synchronizing INT);
CREATE TABLE revision(pk_revision SERIAL PRIMARY KEY,datetimerevision TIMESTAMP,comment VARCHAR(255));
CREATE TABLE object(pk_object SERIAL PRIMARY KEY,id_object INT,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),datetimecreation TIMESTAMP,datetimemodification TIMESTAMP,datetimedestruction TIMESTAMP,comment VARCHAR(500),name VARCHAR(255),importid INT,importtable VARCHAR(255),lid_actor INT);
CREATE TABLE comment(pk_comment SERIAL PRIMARY KEY,id_comment INT,lpk_object INT REFERENCES object(pk_object));
ALTER TABLE comment ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE descriptionsystem(pk_descriptionsystem SERIAL PRIMARY KEY,id_descriptionsystem INT,lpk_object INT REFERENCES object(pk_object),strategicvalue VARCHAR(255),operational INT,structuralstate VARCHAR,operationalstate VARCHAR,dateoperationalcreation TIMESTAMP,dateoperationalcreationupper TIMESTAMP,operationaldatecreationaccuracy VARCHAR(255),datetimeoperationaldestruction TIMESTAMP,geotrackingxyquality INT,geotrackingzquality INT,geotrackingdate TIMESTAMP,geotrackingsource VARCHAR(255),parameters VARCHAR(255),parameterslist VARCHAR(255),city VARCHAR(255),streetname VARCHAR(255),streetupname VARCHAR(255),streetdownname VARCHAR(255),streetcomment VARCHAR(255),lid_actor_1 INT,lid_actor_2 INT,lid_actor_3 INT,lid_facility INT,float_1 REAL,float_2 REAL,float_3 REAL,float_4 REAL,float_5 REAL,float_6 REAL,float_7 REAL,float_8 REAL,float_9 REAL,float_10 REAL,string_1 VARCHAR(255),string_2 VARCHAR(255),string_3 VARCHAR(255),string_4 VARCHAR(255),string_5 VARCHAR(255),string_6 VARCHAR(255),string_7 VARCHAR(255),string_8 VARCHAR(255),string_9 VARCHAR(255),string_10 VARCHAR(255),networktype VARCHAR(255),flowconditionupstream VARCHAR(255),flowconditiondownstream VARCHAR(255),systemfunction VARCHAR(255));
CREATE TABLE event(pk_event SERIAL PRIMARY KEY,id_event INT,lpk_object INT REFERENCES object(pk_object),description VARCHAR(255),severity INT,ref VARCHAR(255),parameters VARCHAR(255),parameterslist VARCHAR(255));
CREATE TABLE actor(pk_actor SERIAL PRIMARY KEY,id_actor INT,lpk_object INT REFERENCES object(pk_object),actorname VARCHAR(255),society VARCHAR(255),adress VARCHAR(255),fax VARCHAR(255),phone VARCHAR(255),function VARCHAR(255),mail VARCHAR(255));
CREATE TABLE delivery(pk_delivery SERIAL PRIMARY KEY,id_delivery INT,lpk_object INT REFERENCES object(pk_object),deliverycategory VARCHAR(255),projectowner VARCHAR(255),contractor VARCHAR(255),datecontract TIMESTAMP,contractref VARCHAR(255),urgency VARCHAR(255),estimatedcost NUMERIC,estimatedduration NUMERIC,dateestimatedenddelivery TIMESTAMP,subdeliverystage VARCHAR(255),datedeliverystarting TIMESTAMP,datedeliveryending TIMESTAMP,deliverylocationcity VARCHAR(255),deliverylocationstreetname VARCHAR(255),lid_delivery INT);
CREATE TABLE geoarea(pk_geoarea SERIAL PRIMARY KEY,id_geoarea INT,lpk_object INT REFERENCES object(pk_object),country VARCHAR(255),region VARCHAR(255),city VARCHAR(255),population VARCHAR(255),contextesocioeco VARCHAR(255),importancesociale VARCHAR(255),importanceindustrielle VARCHAR(255),geoareatype VARCHAR(255));
ALTER TABLE geoarea ADD  COLUMN   geom geometry('MULTIPOLYGON',2154);
CREATE TABLE deficiency(pk_deficiency SERIAL PRIMARY KEY,id_deficiency INT,lpk_object INT REFERENCES object(pk_object),deficiencycategory VARCHAR(255),impact VARCHAR(255),priority VARCHAR(255),risks VARCHAR(255),sector1 VARCHAR(255),sector2 VARCHAR(255),sector3 VARCHAR(255),lid_descriptionsystem INT);
ALTER TABLE deficiency ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE resource(pk_resource SERIAL PRIMARY KEY,id_resource INT,lpk_object INT REFERENCES object(pk_object),productor VARCHAR(255),datetimeresource TIMESTAMP,produceradress VARCHAR(255),producername VARCHAR(255),producermail VARCHAR(255),producerphone1 VARCHAR(255),producerphone2 VARCHAR(255),file VARCHAR(255),thumbnail BYTEA,description VARCHAR(255),resourceindex INT,lid_delivery INT);
CREATE TABLE edge(pk_edge SERIAL PRIMARY KEY,id_edge INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),lid_resource_1 INT,lid_descriptionsystem_1 INT,lid_descriptionsystem_2 INT,material VARCHAR(255),nominaldiameter INT,pipetype VARCHAR(255),pipesubtype VARCHAR(255),pipeshape VARCHAR(255),height REAL,laterals INT,flowtype INT,elevationup REAL,elevationdown REAL,depthup REAL,depthdown REAL,domain VARCHAR(255),location VARCHAR(255),accessibility INT,beddingmaterial VARCHAR(255),soiltype VARCHAR(255),soilmoisture VARCHAR(255));
ALTER TABLE edge ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE node(pk_node SERIAL PRIMARY KEY,id_node INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),lid_descriptionsystem_1 INT,elevationinvert REAL,elevationcover REAL,depthinvert REAL,altitude1 REAL,depth1 REAL,nodetype VARCHAR(255),nodesubtype VARCHAR(255),accessibility VARCHAR(255),domain VARCHAR(255),location VARCHAR(255),width REAL,lenght REAL,thickness REAL,lid_resource_1 INT,lid_resource_2 INT,lid_resource_3 INT,lid_resource_4 INT,lid_resource_5 INT,lid_resource_6 INT,manholecovershape VARCHAR(255),manholecovertype VARCHAR(255),manholecoverdiameter REAL,manholematerial VARCHAR(255),manholeshape VARCHAR(255),presencesteps INT,presencehandle INT,presencelowflowchannel INT,presencesiphoidpartition INT,presencelid INT,psnominalcapacity REAL,pspumphead REAL,psfence INT,psstormwaterinlet INT,pslocked INT,psh2streatment INT,pseleccabinet INT,pseleccabinetlocked INT,psremotemonitoring INT,psremotemonitoringcomment VARCHAR(255),pspumpswitchingcontroller INT,pspumpswitchingcontrollertype VARCHAR(255),psfloatnumber INT,psfailurecontrollertype VARCHAR(255),psmaterial VARCHAR(255),psfallprotectiongratings INT,psoverflow INT,psinletscreen INT,pspumpnumber INT,psguiderail INT,pspumpliftingchain INT,psdrawdownheight REAL,psdrawdownvolume REAL,pscheckvalve INT,psgatevalve INT,pspressureport INT,DSHroleouvrage VARCHAR(255),brandname VARCHAR(255),brandref VARCHAR(255),airing INT,inletdiameter REAL,outletdiameter REAL,nodetechclass VARCHAR(255),lateralusercategory VARCHAR(255),csoweirheight REAL,scoweirlenght REAL,scoweirthickness REAL,presencealarm INT,presencecontroller INT,sedimenttrap INT,receivingenvironment VARCHAR(255),receivingenvironmentcomment VARCHAR(255),x REAL,dx REAL,y REAL,dy REAL,z REAL,dz REAL);
ALTER TABLE node ADD  COLUMN   geom geometry('POINT',2154);
CREATE TABLE surface(pk_surface SERIAL PRIMARY KEY,id_surface INT,surfacetype VARCHAR(255),lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),lid_descriptionsystem_1 INT,lid_descriptionsystem_2 INT,lid_descriptionsystem_3 INT,lid_descriptionsystem_4 INT,lid_descriptionsystem_5 INT,lid_descriptionsystem_6 INT,lid_descriptionsystem_7 INT,lid_descriptionsystem_8 INT,lid_descriptionsystem_9 INT,lid_descriptionsystem_10 INT,surfacesubtype VARCHAR(255),surfacefunction VARCHAR(255),width REAL,lenght REAL,depth REAL,volume REAL,receivingenvironment VARCHAR(255),flowcontrol VARCHAR(255));
ALTER TABLE surface ADD  COLUMN   geom geometry('POLYGON',2154);
CREATE TABLE facility(pk_facility SERIAL PRIMARY KEY,id_facility INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),facilitytype VARCHAR(255),lid_resource_1 INT,lid_descriptionsystem_1 INT,facilityfunction VARCHAR(255));
ALTER TABLE facility ADD  COLUMN   geom geometry('POLYGON',2154);
CREATE TABLE equipment(pk_equipment SERIAL PRIMARY KEY,id_equipment INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),equipmentcategory VARCHAR(255),lid_resource_1 INT,lid_descriptionsystem_1 INT,domain VARCHAR(255),location VARCHAR(255),equipmenttype INT,accessibility VARCHAR(255));
ALTER TABLE equipment ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE environment(pk_environment SERIAL PRIMARY KEY,id_environment INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),lid_descriptionsystem INT);
ALTER TABLE environment ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE observation(pk_observation SERIAL PRIMARY KEY,id_observation INT,lpk_object INT REFERENCES object(pk_object),datetimeobservation TIMESTAMP,source VARCHAR(255),number INT,conditionglobal INT,gravity VARCHAR(255),progression VARCHAR(500),nextactiontype VARCHAR(500),nextactioncomment VARCHAR(500),nextactiontypecomment VARCHAR(500),lid_delivery INT,lid_deficiency INT,nextactionsubtype VARCHAR(255),conditioncover INT,conditionstep INT,conditionmanhole INT,conditionculvert INT,conditioncontroller INT,presenceh2s INT,presencepressurizedflow INT,presencesediments INT,presenceinfiltrationtosewer INT,presenceinfiltration INT,presenceroots INT,maintenanceopinion INT,equipmentopenclose INT);
CREATE TABLE profile(pk_profile SERIAL PRIMARY KEY,id_profile INT,lpk_descriptionsystem INT REFERENCES descriptionsystem(pk_descriptionsystem),dateprofile TIMESTAMP,profiletype VARCHAR(255),lid_descriptionsystem INT);
ALTER TABLE profile ADD  COLUMN   geom geometry('LINESTRING',2154);
CREATE TABLE graph(pk_graph SERIAL PRIMARY KEY,id_graph INT,lpk_resource INT REFERENCES resource(pk_resource),graphtype VARCHAR(255),graphsubtype VARCHAR(4));
CREATE TABLE model(pk_model SERIAL PRIMARY KEY,id_model INT,lpk_resource INT REFERENCES resource(pk_resource),software VARCHAR(255),scenario VARCHAR(255),conclusions VARCHAR(500));
CREATE TABLE report(pk_report SERIAL PRIMARY KEY,id_report INT,lpk_resource INT REFERENCES resource(pk_resource));
ALTER TABLE report ADD  COLUMN   geom geometry('MULTIPOLYGON',2154);
CREATE TABLE media(pk_media SERIAL PRIMARY KEY,id_media INT,lpk_resource INT REFERENCES resource(pk_resource),typemedia VARCHAR(255));
ALTER TABLE media ADD  COLUMN   geom geometry('POINT',2154);
CREATE TABLE rasters(pk_rasters SERIAL PRIMARY KEY,id_rasters INT,lpk_resource INT REFERENCES resource(pk_resource),rastertype VARCHAR(255));
CREATE TABLE topography(pk_topography SERIAL PRIMARY KEY,id_topography INT,lpk_resource INT REFERENCES resource(pk_resource));
CREATE TABLE itv(pk_itv SERIAL PRIMARY KEY,id_itv INT,lpk_resource INT REFERENCES resource(pk_resource),typeitv VARCHAR(255));
CREATE TABLE graphdata(pk_graphdata SERIAL PRIMARY KEY,lpk_graph INT REFERENCES graph(pk_graph),graphnum1 NUMERIC,graphnum2 NUMERIC,graphchar1 VARCHAR(255),graphchar2 VARCHAR(255),graphnum3 NUMERIC,graphnum4 NUMERIC,graphnum5 NUMERIC,graphnum6 NUMERIC,graphnum7 NUMERIC,graphnum8 NUMERIC,graphnum9 NUMERIC,graphnum10 NUMERIC,graphnum11 NUMERIC,graphnum12 NUMERIC,graphnum13 NUMERIC,graphnum14 NUMERIC,graphnum15 NUMERIC,graphnum16 NUMERIC,graphnum17 NUMERIC,graphnum18 NUMERIC,graphnum19 NUMERIC,graphnum20 NUMERIC);
CREATE TABLE topographydata(pk_topographydata SERIAL PRIMARY KEY,lpk_topography INT REFERENCES topography(pk_topography),topographydatatype VARCHAR(255),x NUMERIC,y NUMERIC,zgps NUMERIC,zwgs84 NUMERIC,raf09 NUMERIC,zmngf NUMERIC,accuracy VARCHAR(255),dx NUMERIC,dy NUMERIC,dz NUMERIC,rodheight NUMERIC,value1 NUMERIC,value2 NUMERIC);
ALTER TABLE topographydata ADD  COLUMN   geom geometry('POINT',2154);
CREATE TABLE tcobjectactor(pk_tcobjectactor SERIAL PRIMARY KEY,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),lid_actor INT,lid_object INT,role VARCHAR(255));
CREATE TABLE tcobjectresource(pk_tcobjectresource SERIAL PRIMARY KEY,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),lid_resource INT,lid_object INT);
CREATE TABLE tcobjectgeoarea(pk_tcobjectgeoarea SERIAL PRIMARY KEY,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),lid_geoarea INT,lid_object INT);
CREATE TABLE tcdeliveryobject(pk_tcdeliveryobject SERIAL PRIMARY KEY,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),lid_delivery INT,lid_object INT);
CREATE TABLE tcsurfacedescriptionsystem(pk_tcsurfacedescriptionsystem SERIAL PRIMARY KEY,lpk_revision_begin INT REFERENCES revision(pk_revision),lpk_revision_end INT REFERENCES revision(pk_revision),lid_surface INT,lid_descriptionsystem INT);
CREATE VIEW database_django AS SELECT * FROM database
CREATE VIEW database_qgis AS SELECT * FROM database
CREATE VIEW revision_django AS SELECT * FROM revision
CREATE VIEW revision_qgis AS SELECT * FROM revision
CREATE VIEW object_django AS SELECT * FROM object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW object_qgis AS  SELECT * FROM object 
CREATE VIEW comment_django AS SELECT comment.*, object.* FROM comment INNER JOIN object ON comment.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'comment_django','geom',2,2154,'LINESTRING' );
CREATE VIEW comment_qgis AS  SELECT comment.*, object.* FROM comment INNER JOIN object ON comment.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'comment_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW descriptionsystem_django AS SELECT descriptionsystem.*, object.* FROM descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW descriptionsystem_qgis AS  SELECT descriptionsystem.*, object.* FROM descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
CREATE VIEW event_django AS SELECT event.*, object.* FROM event INNER JOIN object ON event.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW event_qgis AS  SELECT event.*, object.* FROM event INNER JOIN object ON event.lpk_object = object.pk_object 
CREATE VIEW actor_django AS SELECT actor.*, object.* FROM actor INNER JOIN object ON actor.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW actor_qgis AS  SELECT actor.*, object.* FROM actor INNER JOIN object ON actor.lpk_object = object.pk_object 
CREATE VIEW delivery_django AS SELECT delivery.*, object.* FROM delivery INNER JOIN object ON delivery.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW delivery_qgis AS  SELECT delivery.*, object.* FROM delivery INNER JOIN object ON delivery.lpk_object = object.pk_object 
CREATE VIEW geoarea_django AS SELECT geoarea.* , object.* FROM geoarea INNER JOIN object ON geoarea.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'geoarea_django','geom',2,2154,'MULTIPOLYGON' );
CREATE VIEW geoarea_qgis AS  SELECT geoarea.* , object.* FROM geoarea INNER JOIN object ON geoarea.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'geoarea_qgis','geom',2,2154,'MULTIPOLYGON' );
CREATE VIEW deficiency_django AS SELECT deficiency.* , object.* FROM deficiency INNER JOIN object ON deficiency.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'deficiency_django','geom',2,2154,'LINESTRING' );
CREATE VIEW deficiency_qgis AS  SELECT deficiency.* , object.* FROM deficiency INNER JOIN object ON deficiency.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'deficiency_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW resource_django AS SELECT resource.*, object.* FROM resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW resource_qgis AS  SELECT resource.*, object.* FROM resource INNER JOIN object ON resource.lpk_object = object.pk_object 
CREATE VIEW edge_django AS SELECT edge.*,descriptionsystem.*, object.* FROM edge INNER JOIN descriptionsystem ON edge.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'edge_django','geom',2,2154,'LINESTRING' );
CREATE VIEW edge_qgis AS  SELECT edge.*,descriptionsystem.*, object.* FROM edge INNER JOIN descriptionsystem ON edge.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'edge_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW node_django AS SELECT node.*,descriptionsystem.*, object.* FROM node INNER JOIN descriptionsystem ON node.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON Descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'node_django','geom',2,2154,'POINT' );
CREATE VIEW node_qgis AS  SELECT node.*, descriptionsystem.*, object.* FROM node INNER JOIN descriptionsystem ON node.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'node_qgis','geom',2,2154,'POINT' );
CREATE VIEW surface_django AS SELECT surface.*,descriptionsystem.*, object.* FROM surface INNER JOIN descriptionsystem ON surface.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON Descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'surface_django','geom',2,2154,'POLYGON' );
CREATE VIEW surface_qgis AS  SELECT surface.*, descriptionsystem.*, object.* FROM surface INNER JOIN descriptionsystem ON surface.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'surface_qgis','geom',2,2154,'POLYGON' );
CREATE VIEW facility_django AS SELECT facility.*, descriptionsystem.*,object.* FROM facility INNER JOIN descriptionsystem ON facility.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'facility_django','geom',2,2154,'POLYGON' );
CREATE VIEW facility_qgis AS  SELECT facility.*, descriptionsystem.*, object.* FROM facility INNER JOIN descriptionsystem ON facility.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'facility_qgis','geom',2,2154,'POLYGON' );
CREATE VIEW equipment_django AS SELECT equipment.*, descriptionsystem.*,object.* FROM equipment INNER JOIN descriptionsystem ON equipment.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'equipment_django','geom',2,2154,'LINESTRING' );
CREATE VIEW equipment_qgis AS  SELECT equipment.*, descriptionsystem.*, object.* FROM equipment INNER JOIN descriptionsystem ON equipment.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'equipment_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW environment_django AS SELECT environment.*, descriptionsystem.*, object.* FROM environment INNER JOIN descriptionsystem ON environment.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'environment_django','geom',2,2154,'LINESTRING' );
CREATE VIEW environment_qgis AS  SELECT environment.*, descriptionsystem.*, object.* FROM environment INNER JOIN descriptionsystem ON environment.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'environment_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW observation_django AS SELECT observation.* , object.* FROM observation INNER JOIN object ON observation.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW observation_qgis AS  SELECT observation.* , object.* FROM observation INNER JOIN object ON observation.lpk_object = object.pk_object 
CREATE VIEW profile_django AS SELECT profile.*, descriptionsystem.*, object.* FROM profile INNER JOIN descriptionsystem ON profile.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'profile_django','geom',2,2154,'LINESTRING' );
CREATE VIEW profile_qgis AS  SELECT profile.*, descriptionsystem.*, object.* FROM profile INNER JOIN Descriptionsystem ON profile.lpk_descriptionsystem = descriptionsystem.pk_descriptionsystem INNER JOIN object ON descriptionsystem.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'profile_qgis','geom',2,2154,'LINESTRING' );
CREATE VIEW graph_django AS SELECT graph.*, resource.*, object.* FROM graph INNER JOIN resource ON graph.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW graph_qgis AS  SELECT graph.*, resource.*, object.* FROM graph INNER JOIN resource ON graph.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
CREATE VIEW model_django AS SELECT model.* ,resource.*, object.* FROM model INNER JOIN resource ON model.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW model_qgis AS  SELECT model.* ,resource.*, object.* FROM model INNER JOIN resource ON model.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
CREATE VIEW report_django AS SELECT report.*, resource.*, object.* FROM report INNER JOIN resource ON report.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'report_django','geom',2,2154,'MULTIPOLYGON' );
CREATE VIEW report_qgis AS  SELECT report.*, resource.*, object.* FROM report INNER JOIN resource ON report.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'report_qgis','geom',2,2154,'MULTIPOLYGON' );
CREATE VIEW media_django AS SELECT media.*, resource.*, object.* FROM media INNER JOIN resource ON media.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'media_django','geom',2,2154,'POINT' );
CREATE VIEW media_qgis AS  SELECT media.*, resource.*, object.* FROM media INNER JOIN resource ON media.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'media_qgis','geom',2,2154,'POINT' );
CREATE VIEW rasters_django AS SELECT rasters.*, resource.*, object.* FROM rasters INNER JOIN resource ON rasters.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW rasters_qgis AS  SELECT rasters.*, resource.*, object.*FROM rasters INNER JOIN resource ON rasters.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
CREATE VIEW topography_django AS SELECT topography.*, resource.*, object.* FROM topography INNER JOIN resource ON topography.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW topography_qgis AS  SELECT topography.*, resource.*, object.* FROM topography INNER JOIN resource ON topography.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
CREATE VIEW graphdata_django AS SELECT graphdata.* FROM graphdata
CREATE VIEW graphdata_qgis AS  SELECT graphdata.* FROM graphdata 
CREATE VIEW topographydata_django AS SELECT topographydata.* FROM topographydata
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'topographydata_django','geom',2,2154,'POINT' );
CREATE VIEW topographydata_qgis AS  SELECT topographydata.* FROM topographydata 
INSERT INTO geometry_columns(f_table_catalog, f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, "type") VALUES ('base3_urbandrainage', 'reims', 'topographydata_qgis','geom',2,2154,'POINT' );
CREATE VIEW tcobjectactor_django AS SELECT * FROM tcobjectactor WHERE lpk_revision_end IS NULL
CREATE VIEW tcobjectactor_qgis AS  SELECT * FROM tcobjectactor 
CREATE VIEW tcobjectresource_django AS SELECT * FROM tcobjectresource WHERE lpk_revision_end IS NULL
CREATE VIEW tcobjectresource_qgis AS  SELECT * FROM tcobjectresource 
CREATE VIEW tcobjectgeoarea_django AS SELECT * FROM tcobjectgeoarea WHERE lpk_revision_end IS NULL
CREATE VIEW tcobjectgeoarea_qgis AS  SELECT * FROM tcobjectgeoarea 
CREATE VIEW tcdeliveryobject_django AS SELECT * FROM tcdeliveryobject WHERE lpk_revision_end IS NULL
CREATE VIEW tcdeliveryobject_qgis AS  SELECT * FROM tcdeliveryobject 
CREATE VIEW tcsurfacedescriptionsystem_django AS SELECT * FROM tcsurfacedescriptionsystem WHERE lpk_revision_end IS NULL
CREATE VIEW tcsurfacedescriptionsystem_qgis AS  SELECT * FROM tcsurfacedescriptionsystem 
CREATE VIEW itv_django AS SELECT itv.*, resource.*, object.* FROM itv INNER JOIN resource ON itv.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object WHERE object.lpk_revision_end IS NULL AND object.datetimedestruction IS NULL
CREATE VIEW itv_qgis AS  SELECT itv.*, resource.*, object.* FROM itv INNER JOIN resource ON itv.lpk_resource = resource.pk_resource INNER JOIN object ON resource.lpk_object = object.pk_object 
