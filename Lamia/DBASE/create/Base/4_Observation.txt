#DJAN  SELECT Observation.*, Objet.datecreation, Objet.datedestruction, Objet.commentaire, Objet.libelle  FROM Observation INNER JOIN Objet ON Observation.id_objet = Objet.id_objet

# For qgis
#QGISSL SELECT Observation.* , Objet.datecreation, Objet.datedestruction, Objet.libelle, 
#QGISSL MAX(Observation.id_revisionbegin, Objet.id_revisionbegin) AS revisionbegin,
#QGISSL CASE WHEN MIN(Observation.id_revisionend, Objet.id_revisionend) NOT NULL
#QGISSL     THEN MIN(Observation.id_revisionend, Objet.id_revisionend)
#QGISSL     ELSE CASE WHEN  Observation.id_revisionend NOT NULL 
#QGISSL             THEN Observation.id_revisionend
#QGISSL             ELSE Objet.id_revisionend END 
#QGISSL         END AS revisionend
#QGISSL FROM Observation
#QGISSL INNER JOIN Objet ON Observation.id_objet= Objet.id_objet
#QGISSL AND CASE WHEN Observation.id_revisionend NOT NULL 
#QGISSL         THEN CASE WHEN Objet.id_revisionend NOT NULL 
#QGISSL                     THEN Objet.id_revisionbegin < Observation.id_revisionend   AND Objet.id_revisionend > Observation.id_revisionbegin
#QGISSL                     ELSE  Objet.id_revisionbegin < Observation.id_revisionend   END
#QGISSL         ELSE   CASE WHEN Objet.id_revisionend NOT NULL 
#QGISSL             THEN Objet.id_revisionend > Observation.id_revisionbegin   
#QGISSL             ELSE 1 END
#QGISSL         END

#QGISPG SELECT Observation.* , Objet.datecreation, Objet.datedestruction, Objet.libelle, 
#QGISPG greatest(Observation.id_revisionbegin, Objet.id_revisionbegin) AS revisionbegin,
#QGISPG CASE WHEN least(Observation.id_revisionend, Objet.id_revisionend) IS NOT NULL
#QGISPG     THEN least(Observation.id_revisionend, Objet.id_revisionend)
#QGISPG     ELSE CASE WHEN  Observation.id_revisionend IS NOT NULL 
#QGISPG             THEN Observation.id_revisionend
#QGISPG             ELSE Objet.id_revisionend END 
#QGISPG         END AS revisionend
#QGISPG FROM Observation
#QGISPG INNER JOIN Objet ON Observation.id_objet= Objet.id_objet
#QGISPG AND CASE WHEN Observation.id_revisionend IS NOT NULL 
#QGISPG         THEN CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISPG                     THEN Objet.id_revisionbegin < Observation.id_revisionend   AND Objet.id_revisionend > Observation.id_revisionbegin
#QGISPG                     ELSE  Objet.id_revisionbegin < Observation.id_revisionend   END
#QGISPG         ELSE   CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISPG             THEN Objet.id_revisionend > Observation.id_revisionbegin   
#QGISPG             ELSE true END
#QGISPG         END


# Nom_champ             TypePostGis              TypeSpatialite                          Option
###pk_observation;      SERIAL PRIMARY KEY;     INTEGER PRIMARY KEY AUTOINCREMENT
###id_observation;            INT ;                     INTEGER
###id_revisionbegin;        INT ;                   INTEGER;                              Revision(pk_revision)
###id_revisionend;          INT ;                   INTEGER
###id_objet;             INT ;                     INTEGER 

###dateobservation;                DATE;            TEXT
###source;                VARCHAR(255);            TEXT
###nombre;                 INT ;                   INTEGER 
###gravite;                VARCHAR(255);            TEXT
/;                          
0 : faible urgence;         0
1 : pas de grande urgence;  1
2 : urgence moyen terme;    2
3 : urgent ;                3
###evolution;                VARCHAR(255);            TEXT
###typesuite;                VARCHAR(255);            TEXT
Aucune;         AUC
Surveillance;   SUR
Entretien;      ENT
Etudes;         ETU
Travaux;        TVX    
###precisionsuite;                VARCHAR(255);            TEXT
###commentairesuite;                VARCHAR(255);            TEXT


###lk_marche;       INT;            INTEGER
###lk_desordre;         INT ;            INTEGER