#DJAN SELECT  Evenement.* , Objet.datecreation, Objet.datedestruction, Objet.commentaire, Objet.libelle FROM Evenement INNER JOIN OBJET ON Evenement.id_objet = Objet.id_objet

# For qgis
#QGISSL SELECT Evenement.* , Objet.datecreation, Objet.datedestruction,Objet.libelle,
#QGISSL MAX(Evenement.id_revisionbegin, Objet.id_revisionbegin) AS revisionbegin,
#QGISSL CASE WHEN MIN(Evenement.id_revisionend, Objet.id_revisionend) IS NOT NULL
#QGISSL     THEN MIN(Evenement.id_revisionend, Objet.id_revisionend)
#QGISSL     ELSE CASE WHEN  Evenement.id_revisionend IS NOT NULL 
#QGISSL             THEN Evenement.id_revisionend
#QGISSL             ELSE Objet.id_revisionend END 
#QGISSL         END AS revisionend
#QGISSL FROM Evenement
#QGISSL INNER JOIN Objet ON Evenement.id_objet= Objet.id_objet
#QGISSL AND CASE WHEN Evenement.id_revisionend IS NOT NULL 
#QGISSL         THEN CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISSL                     THEN Objet.id_revisionbegin < Evenement.id_revisionend   AND Objet.id_revisionend > Evenement.id_revisionbegin
#QGISSL                     ELSE  Objet.id_revisionbegin < Evenement.id_revisionend   END
#QGISSL         ELSE   CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISSL             THEN Objet.id_revisionend > Evenement.id_revisionbegin   
#QGISSL             ELSE 1 END
#QGISSL         END

#QGISPG SELECT Evenement.* , Objet.datecreation, Objet.datedestruction,Objet.libelle,
#QGISPG greatest(Evenement.id_revisionbegin, Objet.id_revisionbegin) AS revisionbegin,
#QGISPG CASE WHEN least(Evenement.id_revisionend, Objet.id_revisionend) IS NOT NULL
#QGISPG     THEN least(Evenement.id_revisionend, Objet.id_revisionend)
#QGISPG     ELSE CASE WHEN  Evenement.id_revisionend IS NOT NULL 
#QGISPG             THEN Evenement.id_revisionend
#QGISPG             ELSE Objet.id_revisionend END 
#QGISPG         END AS revisionend
#QGISPG FROM Evenement
#QGISPG INNER JOIN Objet ON Evenement.id_objet= Objet.id_objet
#QGISPG AND CASE WHEN Evenement.id_revisionend IS NOT NULL 
#QGISPG         THEN CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISPG                     THEN Objet.id_revisionbegin < Evenement.id_revisionend   AND Objet.id_revisionend > Evenement.id_revisionbegin
#QGISPG                     ELSE  Objet.id_revisionbegin < Evenement.id_revisionend   END
#QGISPG         ELSE   CASE WHEN Objet.id_revisionend IS NOT NULL 
#QGISPG             THEN Objet.id_revisionend > Evenement.id_revisionbegin   
#QGISPG             ELSE true END
#QGISPG         END



# Nom_champ             TypePostGis              TypeSpatialite                          Option
###pk_evenement;                  SERIAL PRIMARY KEY;     INTEGER PRIMARY KEY AUTOINCREMENT
###id_evenement;             INT ;                   INTEGER
###id_revisionbegin;        INT ;                   INTEGER;                              Revision(pk_revision)
###id_revisionend;          INT ;                   INTEGER
###id_objet;             INT ;                   INTEGER 

###description ;                VARCHAR(255);            TEXT
###gravite ;             INT ;                   INTEGER
###ref ;                VARCHAR(255);            TEXT
###listeparametres ;                VARCHAR(255);            TEXT
###parametres ;                VARCHAR(255);            TEXT
