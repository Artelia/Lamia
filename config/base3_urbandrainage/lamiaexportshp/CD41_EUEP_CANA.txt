###edge
#nom              type               cst               valeur                    
ID_SAISIE;         Int;                  ;     id_edge
NOMRUE;         String;                  ;     edge_now.streetname
CODEVOIE;         String;                  ;     NULL
INSEE;         String;                  ;     NULL
domain;         String;                  ;     edge_now.domain
IMPLANT;         String;                  ;     edge_now.location
TYPE_RES;         String;                  ;     edge_now.networktype
TYPE_ECOUL;         String;                  ;     edge_now.flowtype
DIAMETRE;         Int;                  ;     edge_now.nominaldiameter * 1000
PREC_DIAM;         String;                  ;     NULL
DIAM_INT;         Int;                  ;     0
DIAM_EXT;         Int;                  ;     0
MATERIAU;         String;                  ;     edge_now.material
ANNEE_POSE;         String;                  ;     NULL
PERIOD_POS;         String;                  ;     NULL
FONCTION;         String;                  ;     edge_now.systemfunction

Z_AMONT;        Double;                             ; CASE WHEN edge_now.depthup is NULL THEN (upstream_node.z - upstream_node.depthinvert) ELSE (upstream_node.z - edge_now.depthup) END 
Z_AVAL;        Double;                             ; CASE WHEN edge_now.depthdown is NULL THEN (downstream_node.z - downstream_node.depthinvert) ELSE (downstream_node.z - edge_now.depthdown) END

PROF_AMONT;        Double;                             ; CASE WHEN edge_now.depthup is NULL THEN upstream_node.depthinvert ELSE edge_now.depthup END 
PROF_AVAL;        Double;                             ; CASE WHEN edge_now.depthdown is NULL THEN  downstream_node.depthinvert ELSE  edge_now.depthdown END

PENTE;        Double;                             ;(( CASE WHEN edge_now.depthup is NULL THEN (upstream_node.z - upstream_node.depthinvert) ELSE (upstream_node.z - edge_now.depthup) END  ) - CASE WHEN edge_now.depthdown is NULL THEN (downstream_node.z - downstream_node.depthinvert) ELSE (downstream_node.z - edge_now.depthdown) END ) / ST_Length(edge_now.geom) * 100


VISITABLE;         String;                  ;     NULL
DATE_MHS;         String;                  ;     NULL
CAUSE_MHS;         String;                  ;     NULL
ETAT_CANA;         String;                  ;     NULL
LITDEPOSE;         String;                  ;     NULL
TYPE_SOL;         String;                  ;     NULL

ETAT_SOL;         String;                  ;     NULL
ENTREPRISE;         String;                  ;     NULL
M_OUVR;         String;                  ;     NULL
PROT_INT;         String;                  ;     NULL
PROT_EXT;         String;                  ;     NULL
DEPOT;         String;                  ;     NULL
CORROSION;         String;                  ;     NULL

NB_BRANCH;         Int;                  ; (SELECT COUNT(lateralsql.id_edge) FROM edge_now as lateralsql WHERE lateralsql.lid_descriptionsystem_2 = edge_now.id_descriptionsystem AND lateralsql.laterals = 1)

SECT_COLL;         String;                  ;     NULL
SECTO;         String;                  ;     NULL
DAT_GEOLOC;         String;                  ;     edge_now.datetimecreation
AUT_ GEOLOC;         String;                  ;     'ARTELIA'
MOD_GEOLOC;         String;                  ;     NULL
CLASSE_PRE;         String;                  ;     NULL
VAL_ATT;         String;                  ;     'ARTELIA'
REMARQUES;         String;                  ;     edge_now.comment



###geom
geom;         Int;               ;                  ST_AsText(edge_now.geom)

###main
FROM edge_now LEFT JOIN node_now AS upstream_node ON edge_now.lid_descriptionsystem_1 = upstream_node.id_descriptionsystem LEFT JOIN node_now AS downstream_node ON edge_now.lid_descriptionsystem_2 = downstream_node.id_descriptionsystem WHERE edge_now.laterals = 0