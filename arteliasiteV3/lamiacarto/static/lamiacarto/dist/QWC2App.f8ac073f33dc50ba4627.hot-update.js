webpackHotUpdate("QWC2App",{

/***/ "./qwc2/utils/ConfigUtils.js":
/*!***********************************!*\
  !*** ./qwc2/utils/ConfigUtils.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright 2015, GeoSolutions Sas.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\");\n\nvar isMobile = __webpack_require__(/*! ismobilejs */ \"./node_modules/ismobilejs/dist/isMobile.min.js\");\n\nvar defaultConfig = {\n  translationsPath: \"translations\",\n  bingApiKey: null,\n  mapquestApiKey: null,\n  defaultFeatureStyle: {\n    strokeColor: [0, 0, 255, 1],\n    strokeWidth: 2,\n    strokeDash: [4],\n    fillColor: [0, 0, 255, 0.33],\n    circleRadius: 10,\n    textFill: 'black',\n    textStroke: 'white'\n  }\n};\nvar ConfigUtils = {\n  getDefaults: function getDefaults() {\n    return defaultConfig;\n  },\n  loadConfiguration: function loadConfiguration() {\n    var configFile = 'config.json';\n    var urlQuery = url.parse(window.location.href, true).query;\n    console.log('*', urlQuery);\n\n    if (urlQuery.localConfig) {\n      configFile = urlQuery.localConfig + '.json';\n    }\n\n    return axios.get(configFile).then(function (response) {\n      if (_typeof(response.data) === 'object') {\n        defaultConfig = assign({}, defaultConfig, response.data);\n      } else {\n        console.warn(\"Broken configuration file \" + configFile + \"!\");\n      }\n\n      return defaultConfig;\n    });\n  },\n\n  /**\n  * Utility to detect browser properties.\n  * Code from leaflet-src.js\n  */\n  getBrowserProperties: function getBrowserProperties() {\n    var ie = ('ActiveXObject' in window);\n    var ielt9 = ie && !document.addEventListener;\n    var ie11 = ie && window.location.hash === !!window.MSInputMethodContext && !!document.documentMode; // terrible browser detection to work around Safari / iOS / Android browser bugs\n\n    var ua = navigator.userAgent.toLowerCase();\n    var webkit = ua.indexOf('webkit') !== -1;\n    var chrome = ua.indexOf('chrome') !== -1;\n    var phantomjs = ua.indexOf('phantom') !== -1;\n    var android = ua.indexOf('android') !== -1;\n    var android23 = ua.search('android [23]') !== -1;\n    var gecko = ua.indexOf('gecko') !== -1;\n    var mobile = isMobile.any; // typeof window.orientation !== undefined + '';\n\n    var msPointer = !window.PointerEvent && window.MSPointerEvent;\n    var pointer = window.PointerEvent && window.navigator.pointerEnabled && window.navigator.maxTouchPoints || msPointer;\n    var retina = 'devicePixelRatio' in window && window.devicePixelRatio > 1 || 'matchMedia' in window && window.matchMedia('(min-resolution:144dpi)') && window.matchMedia('(min-resolution:144dpi)').matches;\n    var doc = document.documentElement;\n    var ie3d = ie && 'transition' in doc.style;\n    var webkit3d = 'WebKitCSSMatrix' in window && 'm11' in new window.WebKitCSSMatrix() && !android23;\n    var gecko3d = ('MozPerspective' in doc.style);\n    var opera3d = ('OTransition' in doc.style);\n    var any3d = !window.L_DISABLE_3D && (ie3d || webkit3d || gecko3d || opera3d) && !phantomjs;\n    var touch = !window.L_NO_TOUCH && !phantomjs && (pointer || 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\n    return {\n      ie: ie,\n      ie11: ie11,\n      ielt9: ielt9,\n      webkit: webkit,\n      gecko: gecko && !webkit && !window.opera && !ie,\n      android: android,\n      android23: android23,\n      chrome: chrome,\n      ie3d: ie3d,\n      webkit3d: webkit3d,\n      gecko3d: gecko3d,\n      opera3d: opera3d,\n      any3d: any3d,\n      mobile: mobile,\n      mobileWebkit: mobile && webkit,\n      mobileWebkit3d: mobile && webkit3d,\n      mobileOpera: mobile && window.opera,\n      touch: touch,\n      msPointer: msPointer,\n      pointer: pointer,\n      retina: retina,\n      platform: navigator.platform\n    };\n  },\n  getConfigProp: function getConfigProp(prop, theme) {\n    if (theme && theme.config && theme.config[prop] !== undefined) {\n      return theme.config[prop];\n    }\n\n    return defaultConfig[prop];\n  }\n};\nmodule.exports = ConfigUtils;\n\n//# sourceURL=webpack:///./qwc2/utils/ConfigUtils.js?");

/***/ })

})